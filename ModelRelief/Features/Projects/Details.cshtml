@model ModelRelief.Dto.Project

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <h4>Project</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<br>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Description
            </th>
            <th>
                Format
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            var emptyList = new List<ModelRelief.Dto.Model3d>();
        }
        @foreach (var projectModel in Model.Models ?? emptyList)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => projectModel.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => projectModel.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => projectModel.Format)
            </td>
            <td>
                <a asp-controller="Models" asp-action="Edit" asp-route-id="@projectModel.Id">Edit</a> |
                <a asp-controller="Models"  asp-action="Details" asp-route-id="@projectModel.Id">Details</a> |
                <a asp-controller="Models" asp-action="Delete" asp-route-id="@projectModel.Id">Delete</a> |
            </td>
        </tr>
        }
    </tbody>
</table>