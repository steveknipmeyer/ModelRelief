<--- Commit
Extend DbInitializer.Populate to seed multiple users.
Database paths and user store folders are based on Ids of user account.
<--- Reading

<-- Tasks
    Goal : Roundtrip a scaled mesh.       
        Scale with a Python processor.

    Issues
        CopyTestFiles
            Complete copying of tests models.
            Generalize to other types of test files.

        Tools folder
            Create a script to purge the test data.
            Place development shell under source code control.

        Verify Path is not used in any Views.
        How should file extensions be handled?
        Create realistic project configurations.
            Description = UserName

        Complete Views for Ux.
        Complete controllers for Api.
        Research API authorization.
        Design the mechanism for generating a Mesh.
            Mesh Post (create) or Mesh Put (update)?
        Manning AspNet Core book.

        User Validation
            User must be authenticated and authorized.
            Resource is owned by user.
                For any updated resource (Get, GetList, Put, Delete), the resource ID must belong to the user.
                For any navigation property, the referenced resource ID must belong to the user.

            Reference properies in Views can be populated only with owned resources.

        Integration Tests
            Api
                How can XUnit be used to test all properties of a resource?
                    Iterate through the property list of a Domain model.

        Logging
        Exception handling
            The ApiValidationResult exposes too much about internals in the developer message (RequestType).

            How should database exceptions, such as those violating Domain DataAnnotation rules, be handled?
            https://andrewlock.net/using-cancellationtokens-in-asp-net-core-mvc-controllers/
            Concurrency exceptions?

            SqliteException: SQLite Error 5: 'database is locked'.
                PostFileRequestHandler : DbContext.SaveChanges();

    Accessing Model From JavaScript
        https://stackoverflow.com/questions/16361364/accessing-mvcs-model-property-from-javascript

    Create a utility URL composer.

    File Transfer
        Use jQuery!
        Wait for file POST to complete before initiating the second metadata POST.

    Export    
        Refactor Export OBJ to use async/await.

<-- Unit Testing
    Base the authentication on an environ
    ment/runtime setting so Identity.MockUserId is always used for unit tests.
    Support database authentication.

    API Testing Mocks
        How can RouteNames.ApiDocumentation be registered as a route?
        Schema
        Host
        Port

<-- Mediator

    Mediator Pipeline
        Should there be top-level logging and exception handling in a pipeline wrapper?
        https://codeopinion.com/fat-controller-cqrs-diet-command-pipeline/
        Authorization
            Extend the Authorize attribute to allow checking for a user-owned resource.
        Logging
        Exception Handling

<-- Opinionated API
    https://schneids.net/never-resting-restful-api-best-practices-using-asp-net-web-api/

    OAPI Design
        Benefits
            Paging
            PUT (partial property list) support
            GET populates related entities

        abstract ApiController
                HandleRequestAsync
            abstract RestController
                HttpGet
                HttpPost
                HttpPut
                HttpDelete
                <Model>Controller
                    overrides

        abstract ValidatedHandler
            <Request>Handler

        abstract RequestValidator
            <Model><Request>Validator

        Pipeline
            DbContextTransactionFilter.OnActionExecutionAsync
                begin transaction
                    ValidationActionFilter.OnActionExecuting
                        RestController HTTP Action
                            ApiController.HandleAsyncRequest
                                var response = await Mediator.Send(request);
                                    ValidatatedHandler.Handle
                                        RequestHandler.Handle
                    ValidationActionFilter.OnActionExecuted
                end transaction
    
<-- Autofac
    ASP.NET Core
    https://autofac.readthedocs.io/en/latest/integration/aspnetcore.html

    Example
    https://github.com/autofac/Examples/tree/master/src/AspNetCoreExample
   
<-- AutoMapper
    The AutoMapper.QueryableExtensions ProjectTo will populate an object graph when used with a query. 
    Otherwise, navigation properties will be null.
        var result = await DbContext.Set<TEntity>()
                .ProjectTo<TGetModel>(Mapper.ConfigurationProvider)
                .SingleOrDefaultAsync(m => m.Id == message.Id);

    Getting along with AutoMapper and Autofac
    https://kevsoft.net/2015/09/14/getting-along-with-automapper-and-autofac.html

<-- Fluent Validation
    https://github.com/JeremySkinner/FluentValidation


<-- API Design
    e-Book on API Design

    Design Guidelines
        General
            https://blog.octo.com/en/design-a-rest-api/
            http://blog.restcase.com/5-basic-rest-api-design-guidelines/
            https://blog.octo.com/wp-content/uploads/2014/12/OCTO-Refcard_API_Design_EN_3.0.pdf
            https://stackoverflow.com/questions/37423468/lowercase-urls-in-net-core-rc2
        Images
            https://stackoverflow.com/questions/33279153/rest-api-file-ie-images-processing-best-practices
        Documentation
            https://github.com/domaindrivendev/Swashbuckle.AspNetCore

<-- API 

    Ideas
        Stormpath
            Use UUID not sequential integer keys in database. This will scale better.
            Rich error message:
                Status Code
                Code
                Message
                DeveloperMessage
                API Reference
            Express relationships as "href" properties to absolute URLs.
            Provide "reference expansion" to allow references to be expanded into the principal object.

        // File Upload
        Url: api/depth-buffers
        [HttpPost]
        [Consumes "application/octet-stream"]
        // Returns Id

        // Metadata (JSON) Upload
        Url: api/depth-buffers/id
        [HttpPut]
        [Consumes "application/json]
        {Id : <from 1st post>}
        
        Mesh Post: Process a relief from a DepthBuffer and a MeshTransform.
            HTTP Post
                DepthBuffer Id
                MeshTransform Id
            HTTP Response
                URL (Mesh)

<-- System
    Throwing policy.
        https://stackoverflow.com/questions/2999298/difference-between-throw-and-throw-new-exception        

<-- File Transfers
        JavaScript
            These solutions are for saving files on the client (not server) side/.
                https://github.com/eligrey/FileSaver.js/
                https://github.com/jimmywarting/StreamSaver.js

<-- Image processing

    Image File Creation
        ImageSharp
        Create a 16 bit PNG from the depth data.

    Images in ASPNET
        https://github.com/SixLabors/ImageSharp
        https://blogs.msdn.microsoft.com/dotnet/2017/01/19/net-core-image-processing/
        https://andrewlock.net/using-imagesharp-to-resize-images-in-asp-net-core-a-comparison-with-corecompat-system-drawing/

<-- MVC

    Viewer.cshtml
        Models
            3D Model
            DepthBuffer

        Views
            ComposerView

            ModelView
                ModelViewer
                    ModelViewerControls
            MeshView
                MeshViewer
                    MeshViewerControls

        Controllers
            ComposerController
            (ModelController)
            (MeshController)

<-- Viewer

    Progress Indicator
    OrbitControls versus Trackball

    Add MaterialLoader.

    Create a set of sample materials such as wood, glass, plaster, etc.

    Camera
        Why does the View change slightly after the 2nd Fit View?
            This happens only if the view has been <panned>.

<-- Optimization

    Optimize BoundingBox procesing.

    Profiling
        Install additional IIS components?

    Memory management!
        https://blog.sessionstack.com/how-javascript-works-memory-management-how-to-handle-4-common-memory-leaks-3f28b94cfbec

<-- Tools

    Webpack

<-- ASPNET Core

    What is the cause of these NET Warnings? They seem to be related to the Entity Framework.
        1701;1702;1705

<-- Debugging Workflows

    Command Line
        FE: Chrome   BE: VSCode  TypeScript: automatic  Reload: automatic
            dotnet run
            gulp serve (automatic TypeScript/reload)
            VSCode Profile: .NET Core Attach
                Edit launch.json to set processId!

    VSCode Profile: .Net Core With Browser
        FE: VSCode   BE: VSCode  TypeScript: DNW  Reload: DNW

    VSCode Profile: .Net Core Launch (web)
        FE: Chrome   BE: VSCode  TypeScript: DNW  Reload: DNW

    VSCode Profile: .NET Core Attach
        Edit launch.json to set processId!
        https://github.com/OmniSharp/omnisharp-vscode/issues/897
        An error happens running the command below. It should open a UI to pick the process.
            D:\Users\Steve Knipmeyer\Documents\GitHub\ModelRelief\ModelRelief>wmic process get Name,ProcessId,CommandLine
            Invalid XML content.
    
    VSCode Resources
        https://stackoverflow.com/questions/43628397/debug-typescript-in-vscode-with-asp-net-core
        https://code.visualstudio.com/blogs/2016/02/23/introducing-chrome-debugger-for-vs-code
        https://github.com/Microsoft/vscode-chrome-debug


<-- Depth Buffer Notes
    Experiment with precision setting in THREE.WebGLRenderer.

    Precision is substantially improved by moving the Near plane as close to the model as possible.
        Pulling in the Far plane does not seem to improve the precision.

    The range of the depth buffer is based on the distance between the Near and Far planes. 
        If the Near and Far planes bound the model, the range will be [0.1].


<-- Database Design   
    https://stackoverflow.com/questions/33197402/link-asp-net-identity-users-to-user-detail-table

    Why are navigation properties virtual?
        https://stackoverflow.com/questions/25715474/why-navigation-properties-are-virtual-by-default-in-ef

    How can the database be backed up?
        Can it be relocated to another location?

    Phase II       
         Materials
            Id
            Name
            Description

         Lighting
            Light[]      

         Scene
            Id
            Name
            Description

            Model3d Id
            Material Id
            Lighting Id
            Camera Id

    SQL Server Studio
        Connnect to a locadb from Studio
        http://nikgupta.net/2015/12/10/connect-localdb-from-management-studio/

        C:\Program Files\Microsoft SQL Server\130\Tools\Binn
            λ SqlLocalDB.exe info MSSQLLOCALDB
            Name:               MSSQLLocalDB
            Version:            13.1.4001.0
            Shared name:
            Owner:              VECTOR\Steve Knipmeyer
            Auto-create:        Yes
            State:              Running
            Last start time:    9/19/2017 6:57:25 AM
            Instance pipe name: np:\\.\pipe\LOCALDB#9A6B632F\tsql\query

    Resource File Names
        IDs
            The resource ID is permanent and invariant.
            There is overhead keeping the disk file name in synch with the resource name.
        Resource Names
            There is an administrative advantage; reviewing a user folder will have semantic names.

<-- Database 
    In Features.Models.Controller.Edit is _dbContext.Models.Update required?
        The model is updated in the database even when this is not called.

<-- Git
    TBD

<-- TypeScript

    How can a subclass call the property (method) of a super class?
        https://github.com/Microsoft/TypeScript/issues/4465
        ModelViewer extends Viewer
            set model (model : THREE.Object) {
                super.model(model);     // not valid
            }            

    TypeScript Typings management
        Where is the Visual Studio instance of node.s installed?
            "C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\Microsoft\Web Tools\External"
            Where are the Visual Studio (automatic) npm typings?
                C:\Users\Steve Knipmeyer\AppData\Local\Microsoft\TypeScript\node_modules\@types
                https://stackoverflow.com/questions/42663010/typescript-in-visual-studio-2017-automatic-definition-inclusion-causes-duplicat
                https://blogs.msdn.microsoft.com/visualstudio/2016/11/28/more-productive-javascript-in-visual-studio-2017-rc/
                    (Note: This feature is disabled by default if using a tsconfig.json configuration file

        var uint8Array = new Uint8Array((<any>fileDataObj.target).result);
            EventTarget does not contain a member result.
            https://github.com/Microsoft/TSJS-lib-generator/pull/207
            https://github.com/Microsoft/TypeScript/issues/299


<-- HTML

    What is the correct use of user-scalable-no? Should it appear only on the Model Viewer page and not be included in the _Layout.cshtml?
        <meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">

    What is the asp-fallback-test for jquery-validation-unobtrusive?

    Why does jQuery need to be loaded before require.js (module mismatch error)?
        https://stackoverflow.com/questions/4535926/how-do-i-use-requirejs-and-jquery-together

<-- Modules

    http://davidbcalhoun.com/2014/what-is-amd-commonjs-and-umd/

    What is the recommended way to split a module over multiple files?
        Using a d.ts file and 'export as namespace' works but it led to issues loading MR in require.js. 
            modelrelief.d.ts
                export as namespace MR

                export * from "fileA"
                export * from "fileB"

            MR is composed of multiple disk files. How is that handled with AMD modules in require.js?
                When TypeScript creates the AMD output, the module name is the disk file. There is no definition of MR as an aggregate.
                Is there a require.config that maps a module name to multiple separate modules?
                    MR -> fileA,fileB
            
            Can a module name have a period such as MR.Graphics?
                import * as MR.Graphics from "Graphics" led to an error.

            Can multiple modules be imported into the same alias? This construct is not valid.
                import * as MR from"Graphics"
                import * as MR from"Views"


<-- THREE.js Notes

    Object clone <only> copies Object3d properties.

    Object matrices are updated only during the render loop. The property matrixAutoUpdate enables this update but not update the matrix when dependent properties are changed.
        Use Object3d.updateMatrixWorld(true) to force an update.

    A Group can belong to only one Scene.
        let sceneA   = new THREE.Scene();
        let theGroup = new THREE.Group();
        sceneA.add(theGroup);

        let sceneB = new THREE.Scene();
        sceneB.add(theGroup);

<-- Technical Notes

    Base64 encoding for HttpRequest.
        https://github.com/beatgammit/base64-js
        https://github.com/hughsk/tab64
    
    How is byte ordering (little/big endian) handled in HTTP requests?
        http://calculist.org/blog/2012/04/25/the-little-endian-web/

    MultiPart Form
        https://stackoverflow.com/questions/3938569/how-do-i-upload-a-file-with-metadata-using-a-rest-web-service

            https://stackoverflow.com/questions/4083702/posting-a-file-and-associated-data-to-a-restful-webservice-preferably-as-json
            https://stackoverflow.com/questions/30655582/uploading-files-and-json-data-in-the-same-request-with-jquery-ajax

        https://stackoverflow.com/questions/43674504/multipart-form-data-file-upload-in-asp-net-core-web-api

    MIMETypes
        Similarly, for binary documents without specific or known subtype, application/octet-stream should be used.

<-- Licenses
    THREE.js        MIT
    Serilog         Apache https://www.apache.org/licenses/LICENSE-2.0
    Autofac         MIT
    MediatR         Apache https://github.com/jbogard/MediatR/blob/master/LICENSE
    FeatureFolders  MIT https://raw.githubusercontent.com/OdeToCode/AddFeatureFolders/master/LICENSE

    OpinionatedApiController : Spencer Schneidenbach
    ContosoCore              : Jimmy Bogard

<-- Visual Studio 
    Performance
        https://developercommunity.visualstudio.com/content/problem/43364/visual-studio-2017-increadibly-slow-and-laggy.html
    Private Hive
    https://stackoverflow.com/questions/42916299/access-visual-studio-2017s-private-registry-hive

<-- Identity
    https://andrewlock.net/introduction-to-authentication-with-asp-net-core/

<-- SQLite

        Multi-user Access
            Cookies are used so tests must be done from an external computer.
        64 bit support

<-- ASP.NET Core Model Validation
    https://github.com/JeremySkinner/FluentValidation/wiki/i.-ASP.NET-Core-integration

    Best Practices
        DataAnnotation rules also should be used for DTO.
            They <complement> FV. They (and any other registered validators) run after FV.
            They provide display formatting and other UX support.
        The Domain models should also use DataAnnotation attributes. 
            Validation will be done when a model (created OUTSIDE) the UX is transacted with the database.
        The DTO should expose only those properies which are editable!
            Missing properties in the View will override the target during mapping because they will have a default value.

    <---------------------------------------------------------------------------------------------------------------------------------------------------->
    Client-side Validation
        The View model (e.g. Dto.Mesh) determines the client-side validation rules.
            Any associated validators for this specific type will run.

        DataAnnotation Attributes
            Property ON form: A client-side error will be displayed and the controller action will not be called.
            Property not present on form: Validation will be done in the server IF the model-bound action parameter contains a validation rule. 
                ModelState will contain errors when the controller action is called.

            N.B. ContosoUniversityCore uses server-side validation (in conjunction with site.js and HtmlHelperExtensions error handling). 
                Any DataAnnotation attributes on the DTO are ignored. No data-val attributes are added to the View.
                    Is this because the jquery-validation-unobtrusive scripts are not include in the View page?
                If a DataAnnotation rule was violated (e.g. [Required]) and there was no FluentValidation (AbstractValidator rule), the property was not marked as invalid.
                * This seems odd because although the form did not contain the client-side validation attributes, why did MVC not validate the object on the incoming model-bound object?
                    Is this due to the custom model-binding?
                However, if the Domain model contains DataAnnotation attributes these are processed when the model is transacted to the database.

            [StringLength(50, MinimumLength = 3)]
            public string Name { get; set; }

        Aggregating Validation Rules
            If View model implements any of these interfaces then additional validation checks will be added the complete list of checks, adding additional results to ModelState.
                FluentValidation.AbstractValidator<T> : (runs first by default)
                DataAnnotation
                IValidatableObject 
            N.B. These are all used by a View if present! Each of these validations contribute rules (in the form of data-val attributes) that are used in the client-side processing.
    
    Server-Side Validation
        The controller action parameters (e.g. Create.Command) control the server-side validation rules.
            Any associated validators for this specific type will run.

        Model-binding maps the Request.Body, route data and query strings to the parameters of the controller action. 
            By default, MVC supports a limited number of formatters.

        All validation providers can contribute rules to the validation.
            DataAnnotation Attribute
            IValidatable
            FluentValidation

    ValidationActionFilter
        If an ActionFilter is registered, control passes there.
            The ActionFilter can check ModelState.Valid and then set the ActionExecutingContext.Result so the controller action is never called.
    
    Finally, the controller action is invoked.
    <---------------------------------------------------------------------------------------------------------------------------------------------------->


<-- Logging

    Review the ILogger interface. How should this work with a Controller?
        namespace Microsoft.Extensions.Logging
        {
            //
            // Summary:
            //     A generic interface for logging where the category name is derived from the specified
            //     TCategoryName type name. Generally used to enable activation of a named Microsoft.Extensions.Logging.ILogger
            //     from dependency injection.
            //
            // Type parameters:
            //   TCategoryName:
            //     The type who's name is used for the logger category name.
            public interface ILogger<out TCategoryName> : ILogger
            {
            }
        }

<-- Variance

    Invariance
        The types must match exactly.

    Covariance (out parameters)
        publi interface IEnumerable (out T)

        A more derived type can be substituted.
        The parameter can be returned because it satisfies the type because it is of type Base.

    Contravariance (in parameters)
        public interface IComparer<in T>

        A less derived type can be substituted.
        When the method is called, the actual parameter passed to the method will be <more derived> so it will satisfy the type of the actual method that is invoked.

<-- Tasks

        // prevent async (no await) warning
        //https://stackoverflow.com/questions/44096253/await-task-completedtask-for-what
        await Task.CompletedTask;

<-- ContosoUniversity Core
    Why is the project named "Core" when it has these dependencies? 
        AutoMapper.EF6
            EntityFramework 6.13

    Why does the ModelRelief Delete display the JSON ContentResult instead of the IndexView?
        The site.js file includes a jQuery call back on all form post submits.
        site.js provides client-side error validation.

    How is the ContosoUniversityCore model binding used?
        public class EntityModelBinder : IModelBinder
        It binds a database <model> looked up from the incoming Id.

<-- Cmder
    ModelReliefShell.bat is started through this batch file located in D:\Users\Steve Knipmeyer\Documents\Bin\cmder\config\profile.d:
        StartModelReliefShell.bat
            "D:\Users\Steve Knipmeyer\Documents\GitHub\ModelRelief\ModelRelief\Tools\ModelReliefShell.bat"
            
<-- Clipboard
        /// <summary>
        /// Handles resource update from a PUT request.
        /// </summary>
        /// <returns>Created HttpStatus</returns>
        public async Task<ObjectResult> Process(int id, TPutModel putModel)
        {
            try
            {
                // find existing model
                var model = await _controller.DBContext.Set<TModel>().FindAsync(id);

                // update properties from incoming request
                Mapper.Map<TPutModel, TModel>(putModel, model);

                // construct final file name from PUT request
                var storeUsers  = _controller.ConfigurationProvider.GetSetting(ResourcePaths.StoreUsers);
                var modelRootFolder = _controller.ConfigurationProvider.GetSetting($"{ResourcePaths.ModelFolders}:{typeof(TModel).Name}");
                string fileRelativeFolder = $"{storeUsers}{_user.Id}/{modelRootFolder}/{id}/";
                string fileRelativePath = $"{fileRelativeFolder}{model.Name}";
                string fileAbsolutePath = $"{_controller.HostingEnvironment.WebRootPath}{fileRelativePath}";
                model.Path = fileRelativeFolder;

                // update repository
                _controller.DBContext.Set<TModel>().Update(model);

                // now rename temporary file (name = Id) to match the final name
                string placeholderFileName = $"{_controller.HostingEnvironment.WebRootPath}{fileRelativeFolder}{id}";
                System.IO.File.Move(placeholderFileName, fileAbsolutePath);

                Log.Information("File PUT {@TModel}", putModel);

                return await Task.FromResult<ObjectResult>(_controller.Ok(""));
            }
            catch (Exception)
            {
                return putModel.ErrorResult(_controller, httpStatusCode: StatusCodes.Status500InternalServerError, apiStatusCode : (int) ApiStatusCode.FileCreation, developerMessage : $"An error occurred updating the file resource {typeof(TModel).Name}.");
            }
        }
