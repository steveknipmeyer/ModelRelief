    /**
     * Constructs a mesh of the given base dimension.
     * @param modelWidth Base dimension (model units). Height is controlled by DB aspect ration.
     * @param material Material to assign to mesh.
     */
    meshA(modelWidth : number, material? : THREE.Material) : THREE.Mesh {

        if (!material)
            material = new THREE.MeshPhongMaterial({wireframe : false, color : 0xff00ff, reflectivity : 0.75, shininess : 0.75});

        let meshGeometry = new THREE.PlaneGeometry(modelWidth, modelWidth, 1, 1);
        let mesh         = new THREE.Mesh(meshGeometry, material);
        mesh.name = DepthBuffer.MeshModelName;

        let vertexCount : number = meshGeometry.vertices.length;
        for (let iVertex = 0; iVertex < vertexCount; iVertex++) {
            
            let vertex : THREE.Vertex = meshGeometry.vertices[iVertex];
        }

        meshGeometry.vertices[0].z = 1;

        meshGeometry.elementsNeedUpdate = true;

        meshGeometry.computeFaceNormals();
        meshGeometry.computeVertexNormals(true);

        meshGeometry.verticesNeedUpdate = true;
        meshGeometry.normalsNeedUpdate = true;

        return mesh;
    }

    /**
     * Constructs a mesh of the given base dimension.
     * @param modelWidth Base dimension (model units). Height is controlled by DB aspect ration.
     * @param material Material to assign to mesh.
     */
    meshC(modelWidth : number, material? : THREE.Material) : THREE.Mesh {

        let theMaterial = new THREE.MeshPhongMaterial({color : 0xffffff});

        let meshGeometry : THREE.Geometry = new THREE.BoxGeometry(modelWidth, modelWidth, modelWidth);


        let mesh  = new THREE.Mesh(meshGeometry, theMaterial);
        mesh.name = DepthBuffer.MeshModelName;

        return mesh;
    }

// ------------------------------------------------------------------------// 
//      Commit Notes                                                       //
// ------------------------------------------------------------------------//

// ------------------------------------------------------------------------// 
//      Tasks                                                              //
// ------------------------------------------------------------------------//
Viewing

    Why does the Mesh not render correctly?
        Material or Lighting!!!
        It behaves as though the direction lighting was missing!

    OrbitControls versus Trackball
    Add Orthographic view controls.
    Add axes helper to mesh viewer.

Performance
    Optimize!
    Memory management!
        Make sure if you use scene.remove(mesh), you also call mesh.geometry.dispose(), mesh.material.dispose() and mesh.texture.dispose() else you'll get memory leaks I think (r71).

Development Workflow
    Add gulp TypeScript compilation.
    Why does the shader code not reload?

Core
    Create DepthBufferFactory class.
    Create MeshPreview class.
    Calculate model extents so the clip planes can be optimized in DepthBuferFactory.
        Transform model by camera transform.
        Calculate bounding box.

    How should the vertex (translated) Z position be calculated from the depth buffer?
        Experiment with precision setting in THREE.WebGLRenderer.

DepthBufferTest
    Remove PostCanvas?
    Add Camera button.

Image File Creation
    Create a 16 bit PNG from the depth data.
        Investigate jQuery ajax support for posting the file to the server.

Code Quality
    Add types to all methods.
        TrackballControls
        OBJLoader
// ------------------------------------------------------------------------// 
//      Depth Buffer Notes                                                 //
// ------------------------------------------------------------------------//
Precision is substantially improved by moving the Near plane as close to the model as possible.
    Pulling in the Far plane does not seem to improve the precision.

The range of the depth buffer is based on the distance between the Near and Far planes. 
    If the Near and Far planes bound the model, the range will be [0.1].

// ------------------------------------------------------------------------// 
//      Database Design                                                    //
// ------------------------------------------------------------------------//
    How can JSON files be used to configure the projects?
    JSON will be used to drive the API!

    Users
        Id
    
    Project
        Scene
        Transform
    
    Transform
        Mesh Depth
        Bas Relief Parameters
            Tau Threshold
            Sigma1 Gaussian Blur 
            Sigma2 Gaussian Smooth
            Lambsa Linear Scaling

    Models
        Id
        Name
        File System Path?
       ?Format (OBJ, STL)
       
    Images
        Id
        Name
        File System Path?
        Type (Depth, Mask)
       ?Format (PNG, JPG, EXR)

     Scenes
        Id
        Name
        Model
        Material
        Lighting
        Camera Position

     Materials
        Id
        Name

     Lighting Configurations
       
// ------------------------------------------------------------------------// 
//      Viewer                                                             //
// ------------------------------------------------------------------------//
Add MaterialLoader.
Create a set of sample materials such as wood, glass, plaster, etc.

// ------------------------------------------------------------------------// 
//      GitHub                                                             //
// ------------------------------------------------------------------------//

// ------------------------------------------------------------------------// 
//      TypeScript Typings                                                 //
// ------------------------------------------------------------------------//
TypeScript Typings management
    Where is the Visual Studio instance of node.s installed?
        "C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\Microsoft\Web Tools\External"
        Where are the Visual Studio (automatic) npm typings?
            C:\Users\Steve Knipmeyer\AppData\Local\Microsoft\TypeScript\node_modules\@types
            https://stackoverflow.com/questions/42663010/typescript-in-visual-studio-2017-automatic-definition-inclusion-causes-duplicat
            https://blogs.msdn.microsoft.com/visualstudio/2016/11/28/more-productive-javascript-in-visual-studio-2017-rc/
                (Note: This feature is disabled by default if using a tsconfig.json configuration file

    var uint8Array = new Uint8Array((<any>fileDataObj.target).result);
    EventTarget does not contain a member result.
    https://github.com/Microsoft/TSJS-lib-generator/pull/207

// ------------------------------------------------------------------------// 
//      Questions                                                          //
// ------------------------------------------------------------------------//
Why does closing Chrome not terminate the debugger process?
    This is an ASPNET Core issue. Works fine with pure JavaScript.

HTML
    What is the correct use of user-scalable-no? Should it appear only on the Model Viewer page and not be included in the _Layout.cshtml?
        <meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">

// ------------------------------------------------------------------------// 
//      Modules                                                            //
// ------------------------------------------------------------------------//
http://davidbcalhoun.com/2014/what-is-amd-commonjs-and-umd/

What is the recommended way to split a module over multiple files?
    Using a d.ts file and 'export as namespace' works but it led to issues loading MR in require.js. 
        modelrelief.d.ts
            export as namespace MR

            export * from "fileA"
            export * from "fileB"

        MR is composed of multiple disk files. How is that handled with AMD modules in require.js?
            When TypeScript creates the AMD output, the module name is the disk file. There is no definition of MR as an aggregate.
            Is there a require.config that maps a module name to multiple separate modules?
                MR -> fileA,fileB
        
        Can a module name have a period such as MR.Graphics?
            import * as MR.Graphics from "Graphics" led to an error.

        Can multiple modules be imported into the same alias? This construct is not valid.
             import * as MR from"Graphics"
             import * as MR from"Views"
