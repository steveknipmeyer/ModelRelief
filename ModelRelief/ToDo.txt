// ------------------------------------------------------------------------// 
//      Tasks                                                              //
// ------------------------------------------------------------------------//
gulp
    Implement gulp task to deploy files into wwwwroot
        <script src="/lib/threejs/examples/js/Detector.js"></script>
        <script src="/lib/threejs/build//three.js"></script>
        <script src="/lib/threejs/examples/js/controls/TrackballControls.js"></script>
        <script src="/lib/threejs/examples/js/loaders/MTLLoader.js"></script>
        <script src="/lib/threejs/examples/js/libs/dat.gui.min.js"></script>

        <script src="/lib/threejs/examples/js/loaders/OBJLoader2.js"></script>
        <script src="/lib/threejs/examples/js/loaders/WWOBJLoader2.js"></script>

TypeScript Typings management
    Where is the Visual Studio instance of node.s installed?
        Where are the Visual Studio npm typings?

Relational Database Design

// ------------------------------------------------------------------------// 
//      GitHub                                                             //
// ------------------------------------------------------------------------//

// ------------------------------------------------------------------------// 
//      TypeScript Typings                                                 //
// ------------------------------------------------------------------------//

var uint8Array = new Uint8Array((<any>fileDataObj.target).result);
    EventTarget does not contain a member result.
    https://github.com/Microsoft/TSJS-lib-generator/pull/207

What is the correct way to add typings?

    When NPM is used to install typings (e.g. dat-gui) where are the files installed?
        The included types were still unresolved...

Investigate these tsconfig.json settings from Scott Allen's NDC Biased Approach to ASP.NET Core talk.
    path
    lib

// ------------------------------------------------------------------------// 
//      Questions                                                          //
// ------------------------------------------------------------------------//

Configuration

HTML
    What is the correct use of user-scalable-no? Should it appear only on the Model Viewer page and not be included in the _Layout.cshtml?
        <meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
