
<!--<head>
    <style>
        body {
            color: #fff;
            font-family: Monospace;
            font-size: 13px;
            text-align: center;
            background-color: #000;
            margin: 0px;
            overflow: hidden;
        }

        a {
            color: #B2E9FF;
            font-weight: bold;
            pointer-events: auto;
        }

        canvas {
            position: absolute;
            top: 0;
            left: 0;
        }

        #info {
            pointer-events: none;
            position: absolute;
            left: 0;
            top: 0px;
            width: 100%;
            padding: 5px;
            display: inline-block;
        }

        #error {
            margin: auto;
            margin-top: 40px;
            display: block;
            max-width: 400px;
            padding: 20px;
            background: #CE0808;
        }
    </style>
</head>-->

<body>
    <canvas></canvas>

    <!------------------------------------------------------------------------------------------------>
    <!--                                    Libraries                                               -->
    <!------------------------------------------------------------------------------------------------>
    <script src="/lib/require.js"></script>

    <!------------------------------------------------------------------------------------------------>
    <!--                                    ModelRelief                                             -->
    <!------------------------------------------------------------------------------------------------>
    <script id="post-vert" type="x-shader/x-vertex">
        varying vec2 vUv;

        void main() {
        vUv = uv;
        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
    </script>
    <script id="post-frag" type="x-shader/x-fragment">
        #include <packing>

            varying vec2 vUv;
            uniform sampler2D tDiffuse;
            uniform sampler2D tDepth;
            uniform float cameraNear;
            uniform float cameraFar;


            float readDepth (sampler2D depthSampler, vec2 coord) {
            float fragCoordZ = texture2D(depthSampler, coord).x;
            float viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );
            return viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );
            }

            void main() {
            vec3 diffuse = texture2D(tDiffuse, vUv).rgb;
            float depth = readDepth(tDepth, vUv);

            gl_FragColor.rgb = vec3(depth);
            gl_FragColor.a = 1.0;
            }
    </script>

    <script>
        requirejs.config({
            baseUrl: '.',
            paths: {
                'Workbench/DepthTexture'                      : '/js/modelrelief',

                'three'                                       : '/lib/threejs/three',
            }
        });
        window.onload = function () {
            requirejs(['Workbench/DepthTexture']);
        }
    </script>
</body>